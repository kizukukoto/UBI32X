# sid configuration file
# created by Id: configrun-sid.in,v 1.1 2003/03/04 19:26:56 natg Exp 
# run by natg @ lnx6 (Linux) at Wed Mar 26 10:34:23 PST 2003
# args: --cpu=ubicom32 --no-run --gdb=5000
load libaudio.la audio_component_library
load libcache.la cache_component_library
load libcgencpu.la cgen_component_library
load libconsoles.la console_component_library
load libgdb.la gdb_component_library
load libgloss.la gloss_component_library
load libglue.la glue_component_library
load libhd44780u.la hd44780u_component_library
load libide.la ide_component_library
load libinterrupt.la interrupt_component_library
load libloader.la loader_component_library
load libmailbox.la mbox_component_library
load libmapper.la mapper_component_library
load libmemory.la mem_component_library
load libmmu.la mmu_component_library
load libparport.la parport_component_library
load libprof.la prof_component_library
load librtc.la rtc_component_library
load libsched.la sched_component_library
load libtimers.la timer_component_library
load libuart.la uart_component_library
load libx86.la x86_component_library
set main persistent? true
# first section
new hw-cpu-ubicom32 cpu
new hw-mapper-basic cpu-mapper
new hw-glue-sequence-8 init-sequence
new hw-glue-sequence-1 hw-reset-net
new hw-glue-sequence-8 deinit-sequence
new hw-glue-sequence-1 yield-net
new hw-glue-sequence-2 cache-flush-net
new sid-sched-host-accurate host-sched
new sid-sched-sim target-sched
# gloss
new sw-gloss-generic/libgloss gloss
# ubicom32 harvard bus mappers
new hw-mapper-basic data-mapper
new hw-mapper-basic insn-mapper
# cpu gdb
new sw-debug-gdb cpu-gdb
new sid-io-socket-server cpu-gdb-socket
# second section
# settings
set cpu step-insn-count 10000
set host-sched num-clients 10 # large enough?
set target-sched num-clients 10 # large enough?
# pin connections
connect-pin main perform-activity -> host-sched advance
connect-pin main perform-activity -> target-sched advance
connect-pin main starting -> init-sequence input
connect-pin main stopping -> deinit-sequence input
connect-pin init-sequence output-0 -> hw-reset-net input
connect-pin hw-reset-net output-0 -> cpu reset!
connect-pin target-sched 0-event -> cpu step!
connect-pin target-sched 0-control <- cpu step-cycles
connect-pin target-sched time-query <- cpu time-query
connect-pin target-sched time-high -> cpu time-high
connect-pin target-sched time-low -> cpu time-low
connect-pin yield-net output-0 -> cpu yield
connect-pin yield-net output-0 -> host-sched yield
connect-bus cpu insn-memory cpu-mapper access-port
connect-bus cpu data-memory cpu-mapper access-port
# gloss
relate gloss cpu cpu
connect-pin init-sequence output-2 -> gloss reset
connect-pin cpu trap <-> gloss trap
connect-pin cpu trap-code -> gloss trap-code
set gloss verbose? 0
connect-bus gloss target-memory cpu-mapper access-port
# ubicom32 harvard bus specific.
disconnect-bus cpu insn-memory cpu-mapper access-port
connect-bus cpu insn-memory data-mapper access-port
disconnect-bus cpu data-memory cpu-mapper access-port
# ubicom32 harvard bus data mapping.
connect-bus cpu data-memory data-mapper access-port
# ubicom32 harvard bus specific gloss .
disconnect-bus gloss target-memory cpu-mapper access-port
connect-bus gloss target-memory data-mapper access-port
# ubicom32 specific gloss .
disconnect-bus gloss target-memory data-mapper access-port
connect-bus gloss target-memory cpu data-bus
set cpu engine-type pbb
# cpu-gdb
relate cpu-gdb cpu cpu
relate cpu-gdb cfgroot main
relate cpu-gdb target-schedulers target-sched
relate cpu-gdb host-schedulers host-sched
connect-pin cpu-gdb process-signal -> main stop!
connect-pin init-sequence output-3 -> cpu-gdb init
connect-pin deinit-sequence output-5 -> cpu-gdb deinit
connect-pin cpu-gdb yield -> yield-net input
connect-pin cpu-gdb flush-icache -> cache-flush-net input
connect-pin cache-flush-net output-1 -> cpu flush-icache
connect-pin cpu-gdb restart -> hw-reset-net input
set cpu-gdb exit-on-detach? 1
# cpu-gdb-socket
connect-pin init-sequence output-2 -> cpu-gdb-socket init
connect-pin deinit-sequence output-6 -> cpu-gdb-socket fini
connect-pin cpu-gdb-socket rx -> cpu-gdb remote-rx
connect-pin cpu-gdb-socket tx <- cpu-gdb remote-tx
connect-pin host-sched 6-event -> cpu-gdb-socket poll-event
connect-pin host-sched 6-control <- cpu-gdb-socket poll-control
set cpu-gdb-socket sockaddr-local 0.0.0.0:5000
# gdb w/ gloss
connect-pin gloss trap-chain <-> cpu-gdb trap
connect-pin gloss trap-code-chain -> cpu-gdb trap-code
connect-pin gloss process-signal -> cpu-gdb gloss-process-signal
connect-pin gloss debug-tx -> cpu-gdb target-tx
relate cpu-gdb gloss gloss
set cpu-gdb enable-Z-packet? true
set cpu-gdb operating-mode? false
set cpu endian big
# ubicom32 harvard-bus mapping .
connect-bus cpu-mapper data[0x100000,0x10ffff] data-mapper access-port
connect-bus cpu-mapper data[0x400000,0x4fffff] data-mapper access-port
connect-bus cpu-mapper insn[0x20000000,0x203fffff] insn-mapper access-port
connect-bus cpu-mapper insn[0x40000000,0xc007ffff] insn-mapper access-port
# ubicom32 gloss memory
new hw-memory-ram/rom-basic gloss-data
set gloss-data size 0x1000000
new hw-memory-ram/rom-basic gloss-insn-flash
set gloss-insn-flash size 0x400000
new hw-memory-ram/rom-basic gloss-insn
set gloss-insn size 0x1000000
# ubicom32 gloss memory mapping .
connect-bus data-mapper data[0x100000,0x10ffff] gloss-data read-write-port
connect-bus data-mapper insn[0x20000000,0x203fffff] gloss-insn-flash read-write-port
connect-bus data-mapper insn[0x40000000,0x40ffffff] gloss-insn read-write-port
# ubicom32 syscall enablement
set cpu syscall-trap 57
