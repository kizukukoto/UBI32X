/*
 * arch/ubicom32/include/asm/mmu_hardware.h
 *   Definition of the hardware MMU block.
 *
 * (C) Copyright 2009, Ubicom, Inc.
 *
 * This file is part of the Ubicom32 Linux Kernel Port.
 *
 * The Ubicom32 Linux Kernel Port is free software: you can redistribute
 * it and/or modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version 2 of the
 * License, or (at your option) any later version.
 *
 * The Ubicom32 Linux Kernel Port is distributed in the hope that it
 * will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 * the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Ubicom32 Linux Kernel Port.  If not, 
 * see <http://www.gnu.org/licenses/>.
 *
 * Ubicom32 implementation derived from (with many thanks):
 *   arch/m68knommu
 *   arch/blackfin
 *   arch/parisc
 */
#ifndef _ASM_UBICOM32_MMU_HARDWARE_H
#define _ASM_UBICOM32_MMU_HARDWARE_H

#include <asm/ubicom32.h>
#include <asm/page.h>

/*
 * The illegal value is defined by the hardware.
 */
#define MMU_ASID_ILLEGAL	0
#define MMU_ASID_BITS		10
#define MMU_ASID_MASK		((1 << MMU_ASID_BITS) - 1)

#define MMU_BASE        (OCP_BASE + OCP_MMU)
#define MMU_CONFIG	(MMU_BASE + 0x00)
#define MMU_PTEC_CFG0  	(MMU_BASE + 0x04)
#define MMU_PTEC_CFG1  	(MMU_BASE + 0x08)
#define MMU_PTEC_CFG2	(MMU_BASE + 0x0c)
#define MMU_MISSQW0	(MMU_BASE + 0x10)
#define MMU_MISSQW1	(MMU_BASE + 0x14)
#define MMU_RESTART	(MMU_BASE + 0x18)
#define MMU_INSERTW0	(MMU_BASE + 0x1c)
#define MMU_INSERTW1	(MMU_BASE + 0x20)
#define MMU_IPURGE	(MMU_BASE + 0x24)
#define MMU_DPURGE	(MMU_BASE + 0x28)
#define MMU_PTEC_ERR	(MMU_BASE + 0x2c)
#define MMU_TLB_IDX	(MMU_BASE + 0x30)
#define MMU_ENTRYW0	(MMU_BASE + 0x34)
#define MMU_ENTRYW1	(MMU_BASE + 0x38)
#define MMU_STATUS	(MMU_BASE + 0x3c)
#define MMU_BUS_ST0	(MMU_BASE + 0x40)	// Blocked thread mask
#define MMU_BUS_ST1	(MMU_BASE + 0x44)	// Blocked by processor data bus
#define MMU_BUS_ST2	(MMU_BASE + 0x48)	// Blocked by the MMU
#define MMU_BUS_ST3	(MMU_BASE + 0x4c)	// Blocked by the cache
#define MMU_BUS_ST4	(MMU_BASE + 0x50)	// Blocked by IOPIO
#define MMU_BUS_ST5	(MMU_BASE + 0x54)	// Blocked by OCM

#define MMU_PUT(value, shift, bits)		(((value) & ((1 << bits) - 1)) << (shift))
#define MMU_GET(value, shift, bits)		(((value) >> (shift)) & ((1 << bits) - 1))

/*
 * The VPN shifting and size is the same
 * for all fields and is based on PAGE_SHIFT.
 */
#define MMU_VPN_SHIFT PAGE_SHIFT
#define MMU_VPN_BITS (32 - PAGE_SHIFT)

#define MMU_CONFIG_HPR_DELAY_SHIFT 8
#define MMU_CONFIG_HPR_DELAY_BITS 8
#define MMU_CONFIG_HPR_DELAY_PUT(delay) MMU_PUT((delay), MMU_CONFIG_HPR_DELAY_SHIFT, MMU_CONFIG_HPR_DELAY_BITS)
#define MMU_CONFIG_HPR_DELAY_GET(value) MMU_GET((value), MMU_CONFIG_HPR_DELAY_SHIFT, MMU_CONFIG_HPR_DELAY_BITS)

#define MMU_CONFIG_PTEC_ENABLE_SHIFT 4
#define MMU_CONFIG_PTEC_ENABLE_BITS 1
#define MMU_CONFIG_PTEC_ENABLE_PUT(enable) MMU_PUT((enable), MMU_CONFIG_PTEC_ENABLE_SHIFT, MMU_CONFIG_PTEC_ENABLE_BITS)
#define MMU_CONFIG_PTEC_ENABLE_GET(value) MMU_GET((value), MMU_CONFIG_PTEC_ENABLE_SHIFT, MMU_CONFIG_PTEC_ENABLE_BITS)

#define MMU_CONFIG_PAGE_MASK_SHIFT 0
#define MMU_CONFIG_PAGE_MASK_BITS 2
#define MMU_CONFIG_PAGE_MASK_PUT(enable) MMU_PUT((enable), MMU_CONFIG_PAGE_MASK_SHIFT, MMU_CONFIG_PAGE_MASK_BITS)
#define MMU_CONFIG_PAGE_MASK_GET(value) MMU_GET((value), MMU_CONFIG_PAGE_MASK_SHIFT, MMU_CONFIG_PAGE_MASK_BITS)

#define MMU_CONFIG_SLEEP_EN_SHIFT 7
#define MMU_CONFIG_SLEEP_EN_BITS 1
#define MMU_CONFIG_SLEEP_EN_PUT(enable) MMU_PUT((enable), MMU_CONFIG_SLEEP_EN_SHIFT, MMU_CONFIG_SLEEP_EN_BITS)
#define MMU_CONFIG_SLEEP_EN_GET(value) MMU_GET((value), MMU_CONFIG_SLEEP_EN_SHIFT, MMU_CONFIG_SLEEP_EN_BITS)

#define MMU_PTEC_CFG0_ENTRY_BITS_SHIFT 16
#define MMU_PTEC_CFG0_ENTRY_BITS_BITS 5
#define MMU_PTEC_CFG0_ENTRY_BITS_PUT(bits) MMU_PUT((bits), MMU_PTEC_CFG0_ENTRY_BITS_SHIFT, MMU_PTEC_CFG0_ENTRY_BITS_BITS)
#define MMU_PTEC_CFG0_ENTRY_BITS_GET(value) MMU_GET((value), MMU_PTEC_CFG0_ENTRY_BITS_SHIFT, MMU_PTEC_CFG0_ENTRY_BITS_BITS)

#if defined(CONFIG_UBICOM32_IP8K_SHUTTLE)
#define MMU_PTEC_CFG0_RTAG_MASK_SHIFT 0
#define MMU_PTEC_CFG0_RTAG_MASK_BITS 7
#else
#define MMU_PTEC_CFG0_RTAG_MASK_SHIFT 1
#define MMU_PTEC_CFG0_RTAG_MASK_BITS 6
#endif
#define MMU_PTEC_CFG0_RTAG_PUT(rtag) MMU_PUT((rtag), MMU_PTEC_CFG0_RTAG_MASK_SHIFT, MMU_PTEC_CFG0_RTAG_MASK_BITS)
#define MMU_PTEC_CFG0_RTAG_GET(value) MMU_GET((value), MMU_PTEC_CFG0_RTAG_MASK_SHIFT, MMU_PTEC_CFG0_RTAG_MASK_BITS)

#define MMU_PTEC_CFG1_ATAG_BASE_SHIFT 7
#define MMU_PTEC_CFG1_ATAG_BASE_BITS 25
#define MMU_PTEC_CFG1_ATAG_BASE_PUT(base) MMU_PUT((base), MMU_PTEC_CFG1_ATAG_BASE_SHIFT, MMU_PTEC_CFG1_ATAG_BASE_BITS)
#define MMU_PTEC_CFG1_ATAG_BASE_GET(value) MMU_GET((value), MMU_PTEC_CFG1_ATAG_BASE_SHIFT, MMU_PTEC_CFG1_ATAG_BASE_BITS)

#define MMU_PTEC_CFG2_ENTRY_BASE_SHIFT 8
#define MMU_PTEC_CFG2_ENTRY_BASE_BITS 24
#define MMU_PTEC_CFG2_ENTRY_BASE_PUT(base) MMU_PUT((base), MMU_PTEC_CFG2_ENTRY_BASE_SHIFT, MMU_PTEC_CFG2_ENTRY_BASE_BITS)
#define MMU_PTEC_CFG2_ENTRY_BASE_GET(value) MMU_GET((value), MMU_PTEC_CFG2_ENTRY_BASE_SHIFT, MMU_PTEC_CFG2_ENTRY_BASE_BITS)

#define MMU_MISSQW0_PGD_SHIFT 8
#define MMU_MISSQW0_PGD_BITS 24
#define MMU_MISSQW0_PGD_PUT(pgd) MMU_PUT((pgd), MMU_MISSQW0_PGD_SHIFT, MMU_MISSQW0_PGD_BITS)
#define MMU_MISSQW0_PGD_GET(value) MMU_GET((value), MMU_MISSQW0_PGD_SHIFT, MMU_MISSQW0_PGD_BITS)

#define MMU_MISSQW0_TYPE_SHIFT 7
#define MMU_MISSQW0_TYPE_BITS 1
#define MMU_MISSQW0_TYPE_GET(value) MMU_GET((value), MMU_MISSQW0_TYPE_SHIFT, MMU_MISSQW0_TYPE_BITS)

#define MMU_MISSQW0_OP_SHIFT 6
#define MMU_MISSQW0_OP_BITS 1
#define MMU_MISSQW0_OP_GET(value) MMU_GET((value), MMU_MISSQW0_OP_SHIFT, MMU_MISSQW0_OP_BITS)

#define MMU_MISSQW0_SRC_SHIFT 5
#define MMU_MISSQW0_SRC_BITS 1
#define MMU_MISSQW0_SRC_GET(value) MMU_GET((value), MMU_MISSQW0_SRC_SHIFT, MMU_MISSQW0_SRC_BITS)

#define MMU_MISSQW0_TNUM_SHIFT 0
#define MMU_MISSQW0_TNUM_BITS 5
#define MMU_MISSQW0_TNUM_GET(value) MMU_GET((value), MMU_MISSQW0_TNUM_SHIFT, MMU_MISSQW0_TNUM_BITS)

#define MMU_MISSQW1_VPN_GET(value) MMU_GET((value), MMU_VPN_SHIFT, MMU_VPN_BITS)

#define MMU_MISSQW1_MULTIPLE_SHIFT 11
#define MMU_MISSQW1_MULTIPLE_BITS 1
#define MMU_MISSQW1_MULTIPLE_GET(value)	MMU_GET((value), MMU_MISSQW1_MULTIPLE_SHIFT, MMU_MISSQW1_MULTIPLE_BITS)

#define MMU_MISSQW1_SRC_SHIFT 10
#define MMU_MISSQW1_SRC_BITS 1
#define MMU_MISSQW1_SRC_GET(value) MMU_GET((value), MMU_MISSQW1_SRC_SHIFT, MMU_MISSQW1_SRC_BITS)

#define MMU_MISSQW1_ASID_SHIFT 0
#define MMU_MISSQW1_ASID_BITS MMU_ASID_BITS
#define MMU_MISSQW1_ASID_GET(value) MMU_GET((value), MMU_MISSQW1_ASID_SHIFT, MMU_MISSQW1_ASID_BITS)

#define MMU_RESTART_SRC_SHIFT 5
#define MMU_RESTART_SRC_BITS 1
#define MMU_RESTART_SRC_PUT(src) MMU_PUT((src), MMU_RESTART_SRC_SHIFT, MMU_RESTART_SRC_BITS)
#define MMU_RESTART_SRC_GET(value) MMU_GET((value), MMU_RESTART_SRC_SHIFT, MMU_RESTART_SRC_BITS)

#define MMU_RESTART_TNUM_SHIFT 0
#define MMU_RESTART_TNUM_MASK 5
#define MMU_RESTART_TNUM_PUT(tnum) MMU_PUT((tnum), MMU_RESTART_TNUM_SHIFT, MMU_RESTART_TNUM_BITS)
#define MMU_RESTART_TNUM_GET(value) MMU_GET((value), MMU_RESTART_TNUM_SHIFT, MMU_RESTART_TNUM_BITS)

#define MMU_INSERTW0_PFN_SHIFT 12
#define MMU_INSERTW0_PFN_BITS 24
#define MMU_INSERTW0_PFN_PUT(pfn) MMU_PUT((pfn), MMU_INSERTW0_PFN_SHIFT, MMU_INSERTW0_PFN_BITS)
#define MMU_INSERTW0_PFN_GET(value) MMU_GET((value), MMU_INSERTW0_PFN_SHIFT, MMU_INSERTW0_PFN_BITS)

#define MMU_INSERTW0_READ_SHIFT 4
#define MMU_INSERTW0_READ_BITS 1
#define MMU_INSERTW0_READ_PUT(read) MMU_PUT((read), MMU_INSERTW0_READ_SHIFT, MMU_INSERTW0_READ_BITS)
#define MMU_INSERTW0_READ_GET(value) MMU_GET((value), MMU_INSERTW0_READ_SHIFT, MMU_INSERTW0_READ_BITS)

#define MMU_INSERTW0_WRITE_SHIFT 3
#define MMU_INSERTW0_WRITE_BITS 1
#define MMU_INSERTW0_WRITE_PUT(write) MMU_PUT((write), MMU_INSERTW0_WRITE_SHIFT, MMU_INSERTW0_WRITE_BITS)
#define MMU_INSERTW0_WRITE_GET(value) MMU_GET((value), MMU_INSERTW0_WRITE_SHIFT, MMU_INSERTW0_WRITE_BITS)

#define MMU_INSERTW0_EXECUTE_SHIFT 2 
#define MMU_INSERTW0_EXECUTE_BITS 1
#define MMU_INSERTW0_EXECUTE_PUT(exec) MMU_PUT((exec), MMU_INSERTW0_EXECUTE_SHIFT, MMU_INSERTW0_EXECUTE_BITS)
#define MMU_INSERTW0_EXECUTE_GET(value) MMU_GET((value), MMU_INSERTW0_EXECUTE_SHIFT, MMU_INSERTW0_EXECUTE_BITS)

#define MMU_INSERTW0_USER_SHIFT 1
#define MMU_INSERTW0_USER_BITS 1
#define MMU_INSERTW0_USER_PUT(user) MMU_PUT((user), MMU_INSERTW0_USER_SHIFT, MMU_INSERTW0_USER_BITS)
#define MMU_INSERTW0_USER_GET(value) MMU_GET((value), MMU_INSERTW0_USER_SHIFT, MMU_INSERTW0_USER_BITS)

#define MMU_INSERTW1_VPN_PUT(vpn) MMU_PUT((vpn), MMU_VPN_SHIFT, MMU_VPN_BITS)
#define MMU_INSERTW1_VPN_GET(value) MMU_GET((value), MMU_VPN_SHIFT, MMU_VPN_BITS)

#define MMU_INSERTW1_TARGET_SHIFT 10
#define MMU_INSERTW1_TARGET_BITS 1
#define MMU_INSERTW1_TARGET_PUT(target) MMU_PUT((target), MMU_INSERTW1_TARGET_SHIFT, MMU_INSERTW1_TARGET_BITS)
#define MMU_INSERTW1_TARGET_GET(value) MMU_GET((value), MMU_INSERTW1_TARGET_SHIFT, MMU_INSERTW1_TARGET_BITS)

#define MMU_INSERTW1_ASID_SHIFT 0
#define MMU_INSERTW1_ASID_BITS MMU_ASID_BITS
#define MMU_INSERTW1_ASID_PUT(asid) MMU_PUT((asid), MMU_INSERTW1_ASID_SHIFT, MMU_INSERTW1_ASID_BITS)
#define MMU_INSERTW1_ASID_GET(value) MMU_GET((value), MMU_INSERTW1_ASID_SHIFT, MMU_INSERTW1_ASID_BITS)

#define MMU_IPURGE_VPN_PUT(vpn) MMU_PUT((vpn), MMU_VPN_SHIFT, MMU_VPN_BITS)
#define MMU_IPURGE_VPN_GET(value) MMU_GET((value), MMU_VPN_SHIFT, MMU_VPN_BITS)

#define MMU_IPURGE_CMD_PURGE_BY_VPN_AND_ASID	0x1
#define MMU_IPURGE_CMD_PURGE_BY_ASID		0x2
#define MMU_IPURGE_CMD_PURGE_ALL		0x3

#define MMU_IPURGE_CMD_SHIFT 10
#define MMU_IPURGE_CMD_BITS 2
#define MMU_IPURGE_CMD_PUT(cmd) MMU_PUT((cmd), MMU_IPURGE_CMD_SHIFT, MMU_IPURGE_CMD_BITS)
#define MMU_IPURGE_CMD_GET(value) MMU_GET((value), MMU_IPURGE_CMD_SHIFT, MMU_IPURGE_CMD_BITS)

#define MMU_IPURGE_ASID_SHIFT 0
#define MMU_IPURGE_ASID_BITS MMU_ASID_BITS
#define MMU_IPURGE_ASID_PUT(asid) MMU_PUT((asid), MMU_IPURGE_ASID_SHIFT, MMU_IPURGE_ASID_BITS)
#define MMU_IPURGE_ASID_GET(value) MMU_GET((value), MMU_IPURGE_ASID_SHIFT, MMU_IPURGE_ASID_BITS)

#define MMU_DPURGE_VPN_PUT(vpn) MMU_PUT((vpn), MMU_VPN_SHIFT, MMU_VPN_BITS)
#define MMU_DPURGE_VPN_GET(value) MMU_GET((value), MMU_VPN_SHIFT, MMU_VPN_BITS)

#define MMU_DPURGE_CMD_PURGE_BY_VPN_AND_ASID	0x1
#define MMU_DPURGE_CMD_PURGE_BY_ASID		0x2
#define MMU_DPURGE_CMD_PURGE_ALL		0x3

#define MMU_DPURGE_CMD_SHIFT 10
#define MMU_DPURGE_CMD_BITS 2
#define MMU_DPURGE_CMD_PUT(cmd) MMU_PUT((cmd), MMU_DPURGE_CMD_SHIFT, MMU_DPURGE_CMD_BITS)
#define MMU_DPURGE_CMD_GET(value) MMU_GET((value), MMU_DPURGE_CMD_SHIFT, MMU_DPURGE_CMD_BITS)

#define MMU_DPURGE_ASID_SHIFT 0
#define MMU_DPURGE_ASID_BITS MMU_ASID_BITS
#define MMU_DPURGE_ASID_PUT(asid) MMU_PUT((asid), MMU_DPURGE_ASID_SHIFT, MMU_DPURGE_ASID_BITS)
#define MMU_DPURGE_ASID_GET(value) MMU_GET((value), MMU_DPURGE_ASID_SHIFT, MMU_DPURGE_ASID_BITS)

#define MMU_PTEC_ERR_ADDR_SHIFT 2
#define MMU_PTEC_ERR_ADDR_BITS 30
#define MMU_PTEC_ERR_ADDR_GET(value) MMU_GET((value), MMU_PTEC_ERR_ADDR_SHIFT, MMU_PTEC_ERR_ADDR_BITS)

#define MMU_PTEC_ERR_SERROR_SHIFT 1
#define MMU_PTEC_ERR_SERROR_BITS 1
#define MMU_PTEC_ERR_SERROR_GET(value) MMU_GET((value), MMU_PTEC_ERR_SERROR_SHIFT, MMU_PTEC_ERR_SERROR_BITS)

#define MMU_PTEC_ERR_ACK_ERRROR_SHIFT 1
#define MMU_PTEC_ERR_ACK_ERRROR_BITS 1
#define MMU_PTEC_ERR_ACK_ERRROR_GET(value) MMU_GET((value), MMU_PTEC_ERR_ACK_ERRROR_SHIFT, MMU_PTEC_ERR_ACK_ERRROR_BITS)

#define MMU_ENTRYW0_PFN_SHIFT 12
#define MMU_ENTRYW0_PFN_BITS 20
#define MMU_ENTRYW0_PFN_GET(value) MMU_GET((value), MMU_ENTRYW0_PFN_SHIFT, MMU_ENTRYW0_PFN_BITS)

#define MMU_ENTRYW0_READ_SHIFT 4
#define MMU_ENTRYW0_READ_BITS 1
#define MMU_ENTRYW0_READ_GET(value) MMU_GET((value), MMU_ENTRYW0_READ_SHIFT, MMU_ENTRYW0_READ_BITS)

#define MMU_ENTRYW0_WRITE_SHIFT 3
#define MMU_ENTRYW0_WRITE_BITS 1
#define MMU_ENTRYW0_WRITE_GET(value) MMU_GET((value), MMU_ENTRYW0_WRITE_SHIFT, MMU_ENTRYW0_WRITE_BITS)

#define MMU_ENTRYW0_EXECUTE_SHIFT 2
#define MMU_ENTRYW0_EXECUTE_BITS 1
#define MMU_ENTRYW0_EXECUTE_GET(value) MMU_GET((value), MMU_ENTRYW0_EXECUTE_SHIFT, MMU_ENTRYW0_EXECUTE_BITS)

#define MMU_ENTRYW0_USER_SHIFT 1
#define MMU_ENTRYW0_USER_BITS 1
#define MMU_ENTRYW0_USER_GET(value) MMU_GET((value), MMU_ENTRYW0_USER_SHIFT, MMU_ENTRYW0_USER_BITS)

#define MMU_ENTRYW1_VPN_GET(value) MMU_GET((value), MMU_VPN_SHIFT, MMU_VPN_BITS)

#define MMU_ENTRYW1_ASID_SHIFT 0
#define MMU_ENTRYW1_ASID_BITS MMU_ASID_BITS
#define MMU_ENTRYW1_ASID_GET(value) MMU_GET((value), MMU_ENTRYW1_ASID_SHIFT, MMU_ENTRYW1_ASID_BITS)

#define MMU_STATUS_STATE_SHIFT 16
#define MMU_STATUS_STATE_BITS 4
#define MMU_STATUS_STATE_GET(value) MMU_GET((value), MMU_STATUS_STATE_SHIFT, MMU_STATUS_STATE_BITS)

#define MMU_STATUS_LATENCY_SHIFT 0
#define MMU_STATUS_LATENCY_BITS 16
#define MMU_STATUS_LATENCY_GET(value) MMU_GET((value), MMU_STATUS_LATENCY_SHIFT, MMU_STATUS_LATENCY_BITS)

#define MMU_TNUM_BASE (MMU_BASE + 0x100)
#define MMU_TNUM_PGD(tnum)		(MMU_TNUM_BASE + ((tnum) << 4) + 0x00)
#define MMU_TNUM_ASIDS(tnum)		(MMU_TNUM_BASE + ((tnum) << 4) + 0x04)
#define MMU_TNUM_ASID_CMP(tnum)		(MMU_TNUM_BASE + ((tnum) << 4) + 0x08)
#define MMU_TNUM_ASID_MASK(tnum)	(MMU_TNUM_BASE + ((tnum) << 4) + 0x0c)

#define MMU_TNUM_ASID2_SHIFT 20
#define MMU_TNUM_ASID2_BITS 10
#define MMU_TNUM_ASID2_PUT(asid) MMU_PUT((asid), MMU_TNUM_ASID2_SHIFT, MMU_TNUM_ASID2_BITS)
#define MMU_TNUM_ASID2_GET(value) MMU_GET((value), MMU_TNUM_ASID2_SHIFT, MMU_TNUM_ASID2_BITS)

#define MMU_TNUM_ASID1_SHIFT 10
#define MMU_TNUM_ASID1_BITS 10
#define MMU_TNUM_ASID1_PUT(asid) MMU_PUT((asid), MMU_TNUM_ASID1_SHIFT, MMU_TNUM_ASID1_BITS)
#define MMU_TNUM_ASID1_GET(value) MMU_GET((value), MMU_TNUM_ASID1_SHIFT, MMU_TNUM_ASID1_BITS)

#define MMU_TNUM_ASID0_SHIFT 0
#define MMU_TNUM_ASID0_BITS 10
#define MMU_TNUM_ASID0_PUT(asid) MMU_PUT((asid), MMU_TNUM_ASID0_SHIFT, MMU_TNUM_ASID0_BITS)
#define MMU_TNUM_ASID0_GET(value) MMU_GET((value), MMU_TNUM_ASID0_SHIFT, MMU_TNUM_ASID0_BITS)

#define MMU_TNUM_CMP_EN2_SHIFT 26
#define MMU_TNUM_CMP_EN2_BITS 1
#define MMU_TNUM_CMP_EN2_PUT(asid) MMU_PUT((asid), MMU_TNUM_CMP_EN2_SHIFT, MMU_TNUM_CMP_EN2_BITS)
#define MMU_TNUM_CMP_EN2_GET(value) MMU_GET((value), MMU_TNUM_CMP_EN2_SHIFT, MMU_TNUM_CMP_EN2_BITS)

#define MMU_TNUM_CMP_EN1_SHIFT 25
#define MMU_TNUM_CMP_EN1_BITS 1
#define MMU_TNUM_CMP_EN1_PUT(asid) MMU_PUT((asid), MMU_TNUM_CMP_EN1_SHIFT, MMU_TNUM_CMP_EN1_BITS)
#define MMU_TNUM_CMP_EN1_GET(value) MMU_GET((value), MMU_TNUM_CMP_EN1_SHIFT, MMU_TNUM_CMP_EN1_BITS)

#define MMU_TNUM_CMP_EN0_SHIFT 24
#define MMU_TNUM_CMP_EN0_BITS 1
#define MMU_TNUM_CMP_EN0_PUT(asid) MMU_PUT((asid), MMU_TNUM_CMP_EN0_SHIFT, MMU_TNUM_CMP_EN0_BITS)
#define MMU_TNUM_CMP_EN0_GET(value) MMU_GET((value), MMU_TNUM_CMP_EN0_SHIFT, MMU_TNUM_CMP_EN0_BITS)

#define MMU_TNUM_ASID_CMP2_SHIFT 16
#define MMU_TNUM_ASID_CMP2_BITS 4
#define MMU_TNUM_ASID_CMP2_PUT(asid) MMU_PUT((asid), MMU_TNUM_ASID_CMP2_SHIFT, MMU_TNUM_ASID_CMP2_BITS)
#define MMU_TNUM_ASID_CMP2_GET(value) MMU_GET((value), MMU_TNUM_ASID_CMP2_SHIFT, MMU_TNUM_ASID_CMP2_BITS)

#define MMU_TNUM_ASID_CMP1_SHIFT 8
#define MMU_TNUM_ASID_CMP1_BITS 4
#define MMU_TNUM_ASID_CMP1_PUT(asid) MMU_PUT((asid), MMU_TNUM_ASID_CMP1_SHIFT, MMU_TNUM_ASID_CMP1_BITS)
#define MMU_TNUM_ASID_CMP1_GET(value) MMU_GET((value), MMU_TNUM_ASID_CMP1_SHIFT, MMU_TNUM_ASID_CMP1_BITS)

#define MMU_TNUM_ASID_CMP0_SHIFT 0
#define MMU_TNUM_ASID_CMP0_BITS 4
#define MMU_TNUM_ASID_CMP0_PUT(asid) MMU_PUT((asid), MMU_TNUM_ASID_CMP0_SHIFT, MMU_TNUM_ASID_CMP0_BITS)
#define MMU_TNUM_ASID_CMP0_GET(value) MMU_GET((value), MMU_TNUM_ASID_CMP0_SHIFT, MMU_TNUM_ASID_CMP0_BITS)

#define MMU_TNUM_ASID_MASK2_SHIFT 16
#define MMU_TNUM_ASID_MASK2_BITS 4
#define MMU_TNUM_ASID_MASK2_PUT(mask) MMU_PUT((mask), MMU_TNUM_ASID_MASK2_SHIFT, MMU_TNUM_ASID_MASK2_BITS)
#define MMU_TNUM_ASID_MASK2_GET(value) MMU_GET((value), MMU_TNUM_ASID_MASK2_SHIFT, MMU_TNUM_ASID_MASK2_BITS)

#define MMU_TNUM_ASID_MASK1_SHIFT 8
#define MMU_TNUM_ASID_MASK1_BITS 4
#define MMU_TNUM_ASID_MASK1_PUT(mask) MMU_PUT((mask), MMU_TNUM_ASID_MASK1_SHIFT, MMU_TNUM_ASID_MASK1_BITS)
#define MMU_TNUM_ASID_MASK1_GET(value) MMU_GET((value), MMU_TNUM_ASID_MASK1_SHIFT, MMU_TNUM_ASID_MASK1_BITS)

#define MMU_TNUM_ASID_MASK0_SHIFT 0
#define MMU_TNUM_ASID_MASK0_BITS 4
#define MMU_TNUM_ASID_MASK0_PUT(mask) MMU_PUT((mask), MMU_TNUM_ASID_MASK0_SHIFT, MMU_TNUM_ASID_MASK0_BITS)
#define MMU_TNUM_ASID_MASK0_GET(value) MMU_GET((value), MMU_TNUM_ASID_MASK0_SHIFT, MMU_TNUM_ASID_MASK0_BITS)

#endif /* _ASM_UBICOM32_MMU_HARDWARE_H */
